{# surcharge du template base.html.twig à la racine de templates #}
{% extends 'base.html.twig' %}

{# surcharge (remplacement) du bloc body défini dans base.html.twig #}
{% block body %}
    {# création d'une variable #}
    {% set test = 'Une variable de test' %}

    {# affichage d'une variable #}
    <p>{{ test }}</p>

    {# concaténation avec le tilde #}
    <p>{{ test ~ ' !' }}</p>

    {# structure conditionnelle #}
    {% if test != '' %}
        <p>test n'est pas vide</p>
    {% else %}
        <p>test est vide</p>
    {% endif %}

    {% set vrai = true %}
    {% set faux = false %}

    {# not en toutes lettres : if (!$faux) #}
    {% if not faux %}
        <p>faux n'est pas vrai</p>
    {% endif %}

    {# and et or en toutes lettres : if ($vrai && !$faux) #}
    {% if vrai and not faux %}
        <p>vrai est vrai et faux n'est pas vrai</p>
    {% endif %}

    {# BOUCLES #}

    {# for ($i = 0; $i <= 10; $i++) #}
    {% for i in 0..10 %}
        {{ i }}<br>
    {% endfor %}

    {# un tableau indexé #}
    {% set tableau = ['a', 'b', 'c', 'd'] %}

    {# pour accéder à un élément d'un tableau #}
    {{ tableau[2] }}
    {# ou #}
    {{ tableau.2 }}

    {# foreach ($tableau as $lettre) #}
    {% for lettre in tableau %}
        {{ lettre }}<br>
    {% endfor %}

    {# un tableau associatif #}
    {% set assoc = {nom: 'Marx', prenom: 'Groucho', profession: 'Explorateur'} %}

    {# foreach ($assoc as $key => $value) #}
    {% for key, value in assoc %}
        {{ key }} : {{ value }}<br>
    {% endfor %}

    {% set vide = [] %}

    {# on rentre dans le else d'un for quand le tableau est vide #}
    {% for element in vide %}
        {{ element }}<br>
    {% else %}
        <p>Le tableau est vide</p>
    {% endfor %}

    {#
    loop est accessible dans toutes les boucles
    et donne l'information de l'état sur l'état de la boucle
    #}
    {% for value in assoc %}
        Tour de boucle (index 1) : {{ loop.index }}<br>
        Tour de boucle (index 0) : {{ loop.index0 }}<br>

        {% if loop.first %}
            1er tour de boucle<br>
        {% endif %}

        {% if loop.last %}
            Dernier tour de boucle<br>
        {% endif %}

        {{ value }}<br>
    {% endfor %}

    {# TESTS AVEC is ET is not #}

    {# if (isset($test)) #}
    {% if test is defined %}
        <p>La variable test existe</p>
    {% endif %}

    {# if (!empty($test)) #}
    {% if test is not empty %}
        <p>La variable test n'est pas vide</p>
    {% endif %}

    {% set dix = 10 %}

    {# if ($dix % 5 == 0) #}
    {% if dix is divisible by(5) %}
        <p>{{ dix }} est divisible par 5</p>
    {% endif %}

    {# even et odd pour pair et impair #}
    {% if dix is even %}
        <p>{{ dix }} est pair</p>
    {% endif %}

    {% if dix is odd %}
        <p>{{ dix }} est impair</p>
    {% endif %}

    {# if (in_array('a', $tableau)) #}
    {% if 'a' in tableau %}
        <p>Tableau contient 'a'</p>
    {% endif %}

    {# FILTRES AVEC PIPE | #}

    {# strtoupper($test) #}
    <p>{{ test|upper }}</p>

    {# valeur par défaut quand la variable est vide (empty) #}
    <p>{{ var|default('la variable est vide') }}</p>

    {# on peut cumuler les filtres #}
    <p>{{ var|default('la variable est vide')|upper }}</p>

    {# formatage de date #}
    <p>{{ '2020-03-27'|date('d/m/Y') }}</p>

    {# sur un objet DateTime #}
    <p>{{ demain|date('d/m/Y H:i') }}</p>
    {#
    équivalent à :
    appel de la méthode format () de la classe DateTime
    #}
    <p>{{ demain.format('d/m/Y H:i') }}</p>

    {% set paragraphe = '<p>Un paragraphe</p>' %}

    {# par défaut, le HTML est échappé en entités HTML #}
    {{ paragraphe }}

    {# pour que le HTML ne soit échappé #}
    {{ paragraphe|raw }}
{% endblock %}

{#
{{ parent() }} reprend le contenu du bloc title défini dans base.html.twig
à l'endroit où on le place
#}
{% block title %}{{ parent() }} - Twig{% endblock %}
